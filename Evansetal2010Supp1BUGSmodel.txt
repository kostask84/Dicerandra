model {  		#  begin model
  ### difference equations of seed bank dynamics
  for (p in 1:P) { 		# population
    for (t in 2:Y) {		# year; t = 1 = Sept 1988; t = 20 = Sept 2007
	# t = 1 excluded because seedlings not reliably identified in 1988
	# Note: a and b are intermediate parameters created here for convenience
  	# equation for seedlings derived from old seeds and new seeds
      mu.germ[p, t] <- a[p,t]*(mu.sdb[p, t-1] + inprod(Fec[p,t-1,1:3], Nrep[p,  t-1, 1:3]))
	# equation for seeds derived from old seeds and new seeds
      mu.sdb[p, t] <- b[p,t]*(mu.sdb[p, t-1] + inprod(Fec[p,t-1,1:3], Nrep[p, t-1, 1:3]))
  
      Ngerm[p,t] ~ dpois(mu.germ[p,t])		# no. seedlings that emerge is Poisson distributed
      a[p,t]<-exp(delta.t1)*g[p,t-1]			# seed survives Sept-Jan and germinates
      b[p,t]<-exp(delta.t1)*exp(delta.t2)*(1-g[p,t-1])      # seed survives Sept-Jan, doesn't germinate, survives Jan-Sept
	# note that for germination, time refers to the <previous> year
	# because it is the time-since-fire state of the previous Sept that is relevant for germination
    }					# end year loop
    mu.sdb[p,1] ~ dpois(1000) 	# initial seed bank density per pop
  }					# end population loop
  
  ### seedling survival submodel
  # we include only those year+population combinations 
  # where at least one seedling emerged and fire did not occur (killing seedlings)
  # t = 1 = Sept 1988; t = 20 = Sept 2007
  # t = 1 excluded because seedlings not reliably identified in 1988
  ## population 2
  for (t in 2:20) { 		# pop 2 never burned; at least one seedling emerged every year
    Nsdlg[1,t] ~ dbin(s[1,t], Ngerm[1,t])	# data model
    logit(s[1,t]) <- b1.s*tsf[t,1] + yr.s[t,1]	# process model
  }
  ## population 4
  for (t in 2:6) {		# no seedlings emerged in pop 4 in 1994
    Nsdlg[2,t] ~ dbin(s[2,t], Ngerm[2,t])
    logit(s[2,t]) <- b1.s*tsf[t,2] + yr.s[t,2]
  }
  for (t in 8:10) {		# pop 4 burned in 1997/8
    Nsdlg[2,t] ~ dbin(s[2,t], Ngerm[2,t])
    logit(s[2,t]) <- b1.s*tsf[t,2] + yr.s[t,2]
  }
  for (t in 12:13) {		# no seedlings emerged in pop 4 in 2001
    Nsdlg[2,t] ~ dbin(s[2,t], Ngerm[2,t])
    logit(s[2,t]) <- b1.s*tsf[t,2] + yr.s[t,2]
  }
  for (t in 15:20) {
    Nsdlg[2,t] ~ dbin(s[2,t], Ngerm[2,t])
    logit(s[2,t]) <- b1.s*tsf[t,2] + yr.s[t,2]
  }
  ## population 10
  for (t in 2:7) {		# no seedlings emerged in pop 10 in 1995
    Nsdlg[3,t] ~ dbin(s[3,t], Ngerm[3,t])
    logit(s[3,t]) <- b1.s*tsf[t,3] + yr.s[t,3]
  }
  for (t in 10:13) {		# pop 10 burned in 1995/6
    Nsdlg[3,t] ~ dbin(s[3,t], Ngerm[3,t])
    logit(s[3,t]) <- b1.s*tsf[t,3] + yr.s[t,3]
  }
  for (t in 15:20) {
    Nsdlg[3,t] ~ dbin(s[3,t], Ngerm[3,t])
    logit(s[3,t]) <- b1.s*tsf[t,3] + yr.s[t,3]
  }
  ## population 12
  Nsdlg[4,2] ~ dbin(s[4,2], Ngerm[4,2])
  logit(s[4,2]) <- b1.s*tsf[2,4] + yr.s[2,4]
  for (t in 4:9) {		# pop 12 burned in 1989/90
    Nsdlg[4,t] ~ dbin(s[4,t], Ngerm[4,t])
    logit(s[4,t]) <- b1.s*tsf[t,4] + yr.s[t,4]
  }
			# no seedlings emerged in pop 12 in 1997 or 1999
  Nsdlg[4,11] ~ dbin(s[4,11], Ngerm[4,11])
  logit(s[4,11]) <- b1.s*tsf[11,4] + yr.s[11,4]
  for (t in 13:18) {
    Nsdlg[4,t] ~ dbin(s[4,t], Ngerm[4,t])
    logit(s[4,t]) <- b1.s*tsf[t,4] + yr.s[t,4]
  }
			# pop 12 burned in 2005/06
  Nsdlg[4,20] ~ dbin(s[4,20], Ngerm[4,20])
  logit(s[4,20]) <- b1.s*tsf[20,4] + yr.s[20,4]
  ## population 19 never burned
  for (t in 3:13) {		# no seedlings emerged in pop 19 in 1989
    Nsdlg[5,t] ~ dbin(s[5,t], Ngerm[5,t])
    logit(s[5,t]) <- b1.s*tsf[t,5] + yr.s[t,5]
  }
  for (t in 15:20) {		# no seedlings emerged in pop 19 in 2001
    Nsdlg[5,t] ~ dbin(s[5,t], Ngerm[5,t])
    logit(s[5,t]) <- b1.s*tsf[t,5] + yr.s[t,5]
  }  

  # predicting fecundity (F, seed output per plant)
  for (p in 1:P) {			# in each population
    for (t in 1:Y) {			# in each year
      for (r in 1:3) {			# in each reproductive size class
        Fec[p,t,r] <- mu.br[p,t,r]*mu.sd[p,t]	# seeds per plant = #flowering branches x seeds per branch
      }
    }
  }
  
  
  ### regression of germination
  for (p in 1:P) {
    for (t in 1:(Y-1)) {		
      logit(g[p,t]) <- b1.g*tsf[t,p] + yr.g[t]
    }
  }
  
  ### regression of seeds per branch
  for (i in 1:N.sd) {			# data model
    sd[i] ~ dpois(mu.sd[pop.sd[i],year.sd[i]] )
  }
  for (p in 1:P) {			# process model
    for (t in 1:Y) {
      log(mu.sd[p,t]) <- b1.sd*tsf[t,p] + yr.sd[t,p]
    }
  }
  
  ### regression of number of flowering branches
  for (i in 1:N.br) {			# data model
    br[i] ~ dpois(mu.br[pop[i],yr[i],stage[i]])
  }
  for (p in 1:P) {			# process model
    for (t in 1:Y) {
      for (r in 1:3) {
        log(mu.br[p,t,r]) <- b1.br[r]*tsf[t,p] + yr.br[t,r,p]
      }
    }
  }
  
  # hierarchical centering of random year effects on germination
  for (t in 1:Y) {
    mu.yr.g[t] <- b0.g + b2.g*year[t]	      # centered on intercept + model-wide year effect
    yr.g[t] ~ dnorm(mu.yr.g[t], tau.yr.g)  # germination-specific random year effects
  }
  # hierarchical centering of random population and year effects on seedling survival
  for (p in 1:P){
    pop.s[p] ~ dnorm(b0.s, tau.pop.s)	# random population effects centered on intercept (b0.s)
    for (t in 1:Y) {
      mu.yr.s[t,p] <- pop.s[p] + b2.s*year[t]	# add model-wide year effect
      yr.s[t,p] ~ dnorm(mu.yr.s[t,p], tau.yr.s)    # random year effects specific to seedling survival
    }  
  }
  # hierarchical centering of random population and year effects on seeds per branch
  for (p in 1:P) {
    pop.sd[p] ~ dnorm(b0.sd, tau.pop.sd)	# random population effects centered on intercept (b0.sd)
    for (t in 1:Y) {
      mu.yr.sd[t,p] <- pop.sd[p] + b2.sd*year[t]		# add model-wide year effect
      yr.sd[t,p] ~ dnorm(mu.yr.sd[t,p], tau.yr.sd)	# random year effects specific to seeds per branch
    }
  }
 
 # hierarchical centering of random population and year effects on the number of flowering branches
  for (r in 1:3) {
    for (p in 1:P) {
      pop.br[r,p] ~ dnorm(b0.br[r], tau.pop.br[r])	# random population effects centered on intercept (b0.br)
      # year random effects
      for (t in 1:Y) {
         mu.yr.br[t,r,p] <- pop.br[r,p] + b2.br[r]*year[t]	# add model-wide year effect
         yr.br[t,r,p] ~ dnorm(mu.yr.br[t,r,p], tau.yr.br[r]) # random year effects specific to flowering branches
      }
    }
  }
  # prior for model-wide YEAR effects
  for (t in 1:Y) {
    year[t] ~ dnorm(0.0, tau.year)
  }
  
  delta.t1 <- delta*(-4) # seed survival from the time of the annual census to the time of germination = 4 months
  delta.t2 <- delta*(-8) # seed survival from the time of germination to the time of the annual census = 8 months
  delta ~ dgamma(2,20)	 # prior for seed mortality per month
  
  # priors for germination
  b0.g ~ dnorm(0.0, tau.b0) 		# intercept
  b1.g ~ dnorm(0.0, tau.b1)		# effect of time-since-fire
  b2.g <- 2.0*I.b2.g - 1.0		# sign of correlation of year effects on germ with YEAR (1 or -1)
  I.b2.g ~ dbern(pi.b2.g) 
  pi.b2.g ~ dunif(0,1)
  
  # priors for seedling survival
  b0.s ~ dnorm(0.0, tau.b0)		# intercept
  b1.s ~ dnorm(0.0, tau.b1)		# effect of time-since-fire
  b2.s <- 2.0*I.b2.s - 1.0		# sign of correlation of year effects on sdlg surv with YEAR (1 or -1)
  I.b2.s ~ dbern(pi.b2.s)
  pi.b2.s ~ dunif(0,1)
  
  # seeds per branch
  # prior for b0.sd based on preliminary lmer() analysis
  # b1.sd <- 0 based on paucity of data to estimate tsf effect
  b0.sd ~ dnorm(0.15, tau.b0.sd)	# intercept
  b1.sd <- 0.0			# no effect of time-since-fire...not enough data
  b2.sd <- 2.0*I.b2.sd - 1.0		# sign of correlation of year effects on sds/br with YEAR (1 or -1)
  I.b2.sd ~ dbern(pi.b2.sd)	
  pi.b2.sd ~ dunif(0,1)
  tau.b0.sd <- pow(sd.b0.sd, -2)
  sd.b0.sd <- 1.3			# std dev of prior distribution for intercept
  
  # flowering branches per individual
  b0.br[1] ~ dnorm(0.0, tau.b0)	# intercept, small flowering plants
  b0.br[2] ~ dnorm(1.3, tau.b0)	# intercept, medium flowering plants
  b0.br[3] ~ dnorm(3.5, tau.b0)	# intercept, large flowering plants
  for (r in 1:3) {
    b1.br[r] ~ dnorm(0.0, tau.b1)  	# effect of time-since-fire
  }
  for (r in 1:2) {			# for small and medium flowering plants...
    b2.br[r] <- 2.0*I.b2.br[r] - 1.0	# sign of correlation of year effects on flowering br with YEAR (1 or -1)
    I.b2.br[r] ~ dbern(pi.b2.br[r])
    pi.b2.br[r] ~ dunif(0,1)
  }
### NOTE!
# the effect of year variation on the number of flowering branches on large flowering plants 
# is positively correlated with YEAR:
  b2.br[3] <- 1.0		
  
#### multinomial model of transitions among plant classes
  for (p in 1:P) {  ### loop for each population
  for (t in 1:Y-1) {  ### loop for each transition matrix (year)
  ### indicator for good data
  ind[p,t] <- ((1-equals(t,1))*(1-equals(t,2))*equals(p,5) 
              + (1-equals(p,5)))*(1-equals(tsf[t,p],0))*(1-equals(tsf[t,p],1))
  
  ### loop for one transition matrix
  for (i in 1:S) { 		# columns
    x[p,t,i,1:F] ~ dmulti(pi[p,t,i,1:F], n[p,t,i])
    n[p,t,i] <- sum(x[p,t,i,])
    ### following are tsf effects for first row
    log(phi[p,t,i,1]) <- (b1.pro[1]*tsf[t,p]*equals(1,i) 
                         + b1.st[1]*tsf[t,p]*equals(2,i) 
                         + b1.rnr[1]*tsf[t,p]*equals(3,i) 
                         + b1.rnr[2]*tsf[t,p]*equals(4,i)  
                         + b1.rnr[3]*tsf[t,p]*equals(5,i)
                         + yr.tr[t,i,1])*ind[p,t] 
    ### tsf effects for rows 2-4
    for (j in 2:(F-1)) { 	# rows 2-4
      log(phi[p,t,i,j]) <- (b1.st[j]*tsf[t,p]*equals(j+1,i) 
                           + b1.pro[1]*tsf[t,p]*equals(j,i) 
                           + b1.pro[2]*tsf[t,p]*equals(j-1,i) 
                           + b1.pro[3]*tsf[t,p]*equals(j-2,i) 
                           + b1.pro[4]*tsf[t,p]*equals(j-3,i) 
                           + b1.pr*tsf[t,p]*equals(i,2) 
                           + b1.ret[1]*tsf[t,p]*equals(j+2,i) 
                           + b1.ret[2]*tsf[t,p]*equals(j+3,i) 
                           + b1.leap*tsf[t,p]*equals(i,1)
                           + yr.tr[t,i,j])*ind[p,t] 
    }
    ### tsf effects for row F (fate = death)
    log(phi[p,t,i,F]) <- 0
    for (j in 1:F) { 	# pi corresponds to a[i,j] in Table 3 and Appendix Table 1.1
      pi[p,t,i,j] <- phi[p,t,i,j]/sum(phi[p,t,i,]) 
    }
  	
  } # columns
  ### i indexes state (S) in year t-1
  ### j indexes fate (F) in year t
  
  }# t indexes year
  
  }# p indexes population
  
  ### PRIORS
  ### hierarchical centering of year random effects on transition probabilities
  for (i in 1:S){				# for each state (column)
    for (j in 1:(F-1)) {			# for each fate (row)
        b0.tr[i,j] ~ dnorm(0.0, tau.b0)	# intercept
        for (t in 1:Y){
          mu.yr.tr[t,i,j] <- b0.tr[i,j] + year[t]*b2.tr[i,j]                # centered on intercept + model-wide year effect
          yr.tr.tmp[t,i,j] ~ dnorm(mu.yr.tr[t,i,j], tau.yr.tr[i,j])   # rnd year effects specific to each transition
          yr.tr[t,i,j] <- yr.tr.tmp[t,i,j]
      }
    }
  }
  
  # priors for b2's (transitions)
  for (i in 1:S){
    for (j in 1:4) {
      b2.tr[i,j] <- 2.0*I.b2.tr[i,j] - 1.0	# sign of correlation of year effects on each transition with YEAR
      I.b2.tr[i,j] ~ dbern(pi.b2.tr[i,j])		# takes only values 1 or -1
      pi.b2.tr[i,j] ~ dunif(0,1)
    }
  }

  # priors for effect of time-since-fire on retrogression to non-reproductive
  for (i in 1:3) { # retrogression from small, medium, and large flowering classes
    b1.rnr[i] ~ dnorm(0.0, tau.b1)
  }
  
  # prior for effect of time-since-fire on odds of leap-frogging
  b1.leap ~ dnorm(0.0, tau.b1)
  
  # prior for effect of time-since-fire on odds of progression to reproductive
  b1.pr ~ dnorm(0.0, tau.b1)
  	
  # priors for effect of time-since-fire on odds of stasis	
  for (j in 1:(F-1)) {
    b1.st[j] ~ dnorm(0.0, tau.b1)
  }
  
  # NOTE!
  # other transition probabilities are standardized to the odds of death
  b1.death[1] <- 0.0 
  for (i in 2:5) {
    b1.death[i] <- b1.death[1]
  }
  
  # priors for effect of time-since-fire on progression
  for (i in 1:4) {
    b1.pro[i] ~ dnorm(0.0, tau.b1)
  }
  
  # priors for effect of time-since-fire on retrogression
  for (i in 1:2) {
    b1.ret[i] ~ dnorm(0.0, tau.b1)
  }
  
  tau.b0 <- 1		# precision of prior distributions for intercepts
  tau.b1 <- 1		# precision of prior distributions for time-since-fire effects

  # prior based on lmer() results  
  tau.yr.sd <- pow(sd.yr.sd, -2)
  tau.pop.sd <- pow(sd.pop.sd, -2)
  sd.yr.sd ~ dunif(0.5,1.5)		# std dev of rnd year effects on seeds per branch
  sd.pop.sd ~ dunif(0.5,1.5)	# std dev of rnd pop effects on seed per branch

  # prior based on lmer() results
  for (r in 1:3) {
    tau.yr.br[r] <- pow(sd.yr.br[r], -2)
    sd.yr.br[r] ~ dunif(0.1,0.9)	# std dev of rnd year effects on flowering branches
  } 
  for (r in 1:3) {
    tau.pop.br[r] <- pow(sd.pop.br[r], -2)
    sd.pop.br[r] ~ dunif(0.05,0.5)	# std dev of rnd pop effects on flowering branches
  } 

  # uniform prior on standard deviation (following Gelman)
  tau.yr.s <- pow(sd.yr.s, -2)
  sd.yr.s ~ dunif(0,max.sd)		# std dev of rnd year effects on seedling survival
  tau.pop.s <- pow(sd.pop.s, -2)
  sd.pop.s ~ dunif(0,max.sd)	# std dev of rnd pop effects on seedling survival
  tau.yr.g <- pow(sd.yr.g, -2)
  sd.yr.g ~ dunif(0,max.sd)		# std dev of rnd year effects on germination
  for (i in 1:S) {
    for (j in 1:F) {
      tau.yr.tr[i,j] <- pow(sd.yr.tr[i,j], -2)
      sd.yr.tr[i,j] ~ dunif(0,max.sd)	# std dev of rnd year effects on transitions
    }
  }

  tau.year <- pow(sd.year, -2)
  sd.year ~ dunif(0,0.5)		# std dev of "model-wide" year effects

  max.sd <- 2.0			# maximum value explored for std dev of some rnd effects (above)

}  # end model